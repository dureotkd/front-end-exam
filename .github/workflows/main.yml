name: Node.js CI

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: docker://node:lts-alpine
        with:
          node-version: "18.15.0"
          cache: npm

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: zip file
        run: zip -qq -r ./build.zip .
        shell: bash

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./build.zip s3://front-end-exam/deploy/
        if: github.ref == 'refs/heads/master'

      - name: upload to S3 (staging)
        run: aws s3 cp --region ap-northeast-2 ./build.zip s3://pann-node-build-w1/deploy/
        if: github.ref == 'refs/heads/staging'

      - name: deploy with AWS codeDeploy
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            aws deploy create-deployment \
              --application-name front-end-exam \
              --deployment-config-name CodeDeployDefault.OneAtATime \
              --deployment-group-name front-end-exam-group \
              --s3-location bucket=front-end-exam,bundleType=zip,key=deploy/build.zip
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            aws deploy create-deployment \
              --application-name w1-front-end-exam \
              --deployment-config-name CodeDeployDefault.OneAtATime \
              --deployment-group-name w1-front-end-exam-group \
              --s3-location bucket=pann-node-build-w1,bundleType=zip,key=deploy/build.zip
          fi
